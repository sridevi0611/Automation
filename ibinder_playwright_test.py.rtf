{\rtf1\ansi\ansicpg1252\cocoartf2757
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 # test_ibinder_login.py\
\
from selenium import webdriver\
from selenium.webdriver.common.by import By\
from selenium.webdriver.support.ui import WebDriverWait\
from selenium.webdriver.support import expected_conditions as EC\
from selenium.common.exceptions import TimeoutException\
from webdriver_manager.chrome import ChromeDriverManager\
from selenium.webdriver.chrome.service import Service\
from selenium.webdriver.chrome.options import Options\
\
class TestIBinderLogin:\
    def setup_method(self):\
        # Setup Chrome options\
        chrome_options = Options()\
        # Uncomment the line below if you want to run tests headlessly\
        # chrome_options.add_argument('--headless')\
        \
        # Initialize the Chrome driver\
        service = Service(ChromeDriverManager().install())\
        self.driver = webdriver.Chrome(service=service, options=chrome_options)\
        self.driver.implicitly_wait(10)\
        \
    def teardown_method(self):\
        if self.driver:\
            self.driver.quit()\
            \
    def test_successful_login(self):\
        # Test data\
        login_url = "https://test-signin.ibinder.com/Account/Login"\
        email = "sridevi@indpro.se"\
        password = "Sana@123"\
        \
        try:\
            # Navigate to the login page\
            self.driver.get(login_url)\
            \
            # Find and fill in the email field\
            email_field = WebDriverWait(self.driver, 10).until(\
                EC.presence_of_element_located((By.ID, "Email"))\
            )\
            email_field.send_keys(email)\
            \
            # Find and fill in the password field\
            password_field = self.driver.find_element(By.ID, "Password")\
            password_field.send_keys(password)\
            \
            # Click the login button\
            login_button = self.driver.find_element(By.CSS_SELECTOR, "button[type='submit']")\
            login_button.click()\
            \
            # Wait for successful login (adjust the selector based on the actual page structure)\
            WebDriverWait(self.driver, 10).until(\
                EC.url_contains("test-my.ibinder.com")\
            )\
            \
            # Verify successful login\
            assert "test-my.ibinder.com" in self.driver.current_url, "Login failed - Not redirected to dashboard"\
            \
        except TimeoutException as e:\
            raise AssertionError(f"Login test failed - Timeout waiting for element: \{str(e)\}")\
        except Exception as e:\
            raise AssertionError(f"Login test failed: \{str(e)\}")\
\
if __name__ == "__main__":\
    # Manual test execution\
    test = TestIBinderLogin()\
    try:\
        test.setup_method()\
        test.test_successful_login()\
        print("Login test passed successfully!")\
    except AssertionError as e:\
        print(f"Test failed: \{str(e)\}")\
    finally:\
        test.teardown_method()}